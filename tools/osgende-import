#!/usr/bin/env python3
# SPDX-License-Identifier: GPL-3.0-or-later
#
# This file is part of Osgende
# Copyright (C) 2014-2024 Sarah Hoffmann
"""
Importer of OSM planet dumps and diffs into a simplified Osmosis
style postgresql database.

Diffs must be applied in correct order in order to keep database integrity.
However, diffs can be savely reapplied, i.e. it is possible to reapply an
older diff iff all diffs that follow are reapplied as well.

Diffs must not contain duplicates. Use osmosis' simplifyChange to remove
duplicates.
"""
import argparse

from osgende.tools.importing import BaseImportManager
from osgende.common.sqlalchemy.database import database_exists


if __name__ == '__main__':

    # fun with command line options
    parser = argparse.ArgumentParser(description=__doc__,
                                     formatter_class=argparse.RawDescriptionHelpFormatter,
                                     usage='%(prog)s [options] <osm file>')
    parser.add_argument('-d', action='store', dest='database', default='osmosis',
                       help='name of database')
    parser.add_argument('-u', action='store', dest='username', default=None,
                       help='database user')
    parser.add_argument('-U', action='store', dest='ro_user', default=None,
                       help='Additonal database to be granted r/o access')
    parser.add_argument('-p', action='store', dest='password', default=None,
                       help='password for database')
    parser.add_argument('-n', action='store', dest='nodestore', default=None,
                       help='File containing the node store')
    parser.add_argument('-r', action='store', dest='replication', default=None,
                       help='URL to replication service')
    parser.add_argument('-C', action='store_true', dest='change_file', default=None,
                       help='Input file is a change file')
    parser.add_argument('-S', action='store', dest='change_size', default=50*1024,
                       type=int,
                       help='Maxium size in kB for changes to download at once')
    parser.add_argument('-c', action='store_true', dest='createdb', default=False,
                       help='Create a new database and set up the tables')
    parser.add_argument('-i', action='store_true', dest='createindices', default=False,
                       help='Create primary keys and their indices')
    parser.add_argument('-v', action='store_true', dest='verbose', default=False,
                       help='Enable verbose output.')
    parser.add_argument('inputfile', nargs='?', default="-",
                        help='OSM input file')

    options = parser.parse_args()

    mgr = BaseImportManager(options.database, options.verbose)
    if options.replication:
        mgr.set_replication_source(options.replication)

    if options.createdb:
        mgr.create_database()
    else:
        if not database_exists(options.database):
            raise RuntimeError("Database does not exist.")

    if options.nodestore:
        mgr.set_nodestore(options.nodestore)

    if options.inputfile == '-':
        mgr.process_replication(options.change_size)
    else:
        mgr.process_file(options.inputfile, options.change_file)

    if options.createindices or options.createdb:
        mgr.create_indices(options.inputfile == '-')
    if options.ro_user:
        mgr.grant_read_access(options.ro_user)
